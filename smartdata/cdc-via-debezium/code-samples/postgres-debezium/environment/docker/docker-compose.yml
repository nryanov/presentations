services:
  schema-registry:
    image: apicurio/apicurio-registry:3.0.9
    ports:
      - "8080:8080"

  minio:
    image: minio/minio:RELEASE.2025-02-28T09-55-16Z
    container_name: minio
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password
      - MINIO_DOMAIN=minio
    ports:
      - "9001:9001"
      - "9000:9000"
    command: [ "server", "/data", "--console-address", ":9001" ]

  mc:
    depends_on:
      - minio
    image: minio/minio:RELEASE.2025-02-28T09-55-16Z
    container_name: mc
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc config host add minio http://minio:9000 admin password) do echo '...waiting...' && sleep 1; done;

      /usr/bin/mc mb minio/table-one;

      /usr/bin/mc policy set public minio/table-one;

      tail -f /dev/null
      "

  database:
    image: postgres:17
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical"
      - "-c"
      - "max_wal_senders=5"
      - "-c"
      - "max_replication_slots=5"

  liquibase:
    image: liquibase/liquibase:4.32
    depends_on:
      - database
    command:
      - update
    environment:
      LIQUIBASE_COMMAND_CHANGELOG_FILE: changelog.sql
      LIQUIBASE_COMMAND_DRIVER: org.postgresql.Driver
      LIQUIBASE_COMMAND_URL: jdbc:postgresql://database:5432/postgres
      LIQUIBASE_COMMAND_USERNAME: postgres
      LIQUIBASE_COMMAND_PASSWORD: postgres
      LIQUIBASE_COMMAND_DEFAULT_SCHEMA_NAME: public
      LIQUIBASE_SEARCH_PATH: /liquibase/changelog
    volumes:
      - "./liquibase:/liquibase/changelog"

  prometheus:
    image: "prom/prometheus:v3.4.1"
    ports:
      - "9090:9090"
    volumes:
      - "./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml"

  grafana:
    image: "grafana/grafana:12.0.1"
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    volumes:
      - "./grafana/dashboards.yml:/etc/grafana/provisioning/dashboards/main.yaml"
      - "./grafana/datasources.yml:/etc/grafana/provisioning/datasources/main.yaml"
      - "./grafana/dashboards:/var/lib/grafana/dashboards"

  debezium:
    image: "local/postgres-debezium:latest"
    ports:
      - "18080:18080"
    environment:
      JVM_OPTS: -Xms4096m -Xmx4096m
      QUARKUS_CONFIG_LOCATIONS: /etc/debezium.properties
    volumes:
      - "./debezium/debezium.properties:/etc/debezium.properties"