plugins {
    id "java"
    id "io.quarkus"
}

group "postgres-debezium"
version "0.1.0"

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url = uri("https://packages.confluent.io/maven")
    }
}

dependencies {
    implementation enforcedPlatform(libs.quarkus.platform)
    implementation libs.quarkus.arc
    implementation libs.quarkus.jib
    implementation libs.quarkus.micrometer

    implementation libs.amazon.s3
    implementation libs.amazon.aws.core
    implementation libs.amazon.core
    implementation libs.amazon.auth
    implementation libs.amazon.http.auth
    implementation libs.amazon.http.auth.aws
    implementation libs.amazon.regions
    implementation libs.amazon.netty.nio.client
    implementation libs.amazon.sdk.core
    implementation libs.amazon.s3.transfer.manager

    implementation libs.confluent.avro.converter
    implementation libs.apicurio.avro.converter
    implementation libs.parquet.avro
    implementation libs.parquet.cli

    implementation libs.hadoop.common
    implementation(libs.hadoop.aws) {
        exclude(group: "software.amazon.awssdk", module: "bundle")
    }

    implementation libs.debezium.embedded
    implementation libs.debezium.api
    implementation libs.debezium.storage.jdbc
    implementation libs.debezium.connector.postgresql

    // test dependencies
    testImplementation platform(libs.junit.bom)
    testImplementation libs.junit
    testRuntimeOnly libs.junit.platform.launcher
    testImplementation libs.quarkus.junit5
    testImplementation libs.debezium.testcontainers
}

test {
    useJUnitPlatform()
    systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

compileJava {
    options.encoding = "UTF-8"
    options.compilerArgs << "-parameters"
}

compileTestJava {
    options.encoding = "UTF-8"
}

project.ext.extraJvmArgs = [
        "--add-opens", "java.base/java.io=ALL-UNNAMED",
        "--add-opens", "java.base/java.lang.invoke=ALL-UNNAMED",
        "--add-opens", "java.base/java.lang.reflect=ALL-UNNAMED",
        "--add-opens", "java.base/java.lang=ALL-UNNAMED",
        "--add-opens", "java.base/java.math=ALL-UNNAMED",
        "--add-opens", "java.base/java.net=ALL-UNNAMED",
        "--add-opens", "java.base/java.nio=ALL-UNNAMED",
        "--add-opens", "java.base/java.text=ALL-UNNAMED",
        "--add-opens", "java.base/java.time=ALL-UNNAMED",
        "--add-opens", "java.base/java.util.concurrent.atomic=ALL-UNNAMED",
        "--add-opens", "java.base/java.util.concurrent=ALL-UNNAMED",
        "--add-opens", "java.base/java.util.regex=ALL-UNNAMED",
        "--add-opens", "java.base/java.util=ALL-UNNAMED",
        "--add-opens", "java.base/jdk.internal.ref=ALL-UNNAMED",
        "--add-opens", "java.base/jdk.internal.reflect=ALL-UNNAMED",
        "--add-opens", "java.sql/java.sql=ALL-UNNAMED",
        "--add-opens", "java.base/sun.util.calendar=ALL-UNNAMED",
        "--add-opens", "java.base/sun.nio.ch=ALL-UNNAMED",
        "--add-opens", "java.base/sun.nio.cs=ALL-UNNAMED",
        "--add-opens", "java.base/sun.security.action=ALL-UNNAMED",
        "--add-opens", "java.base/sun.util.calendar=ALL-UNNAMED",
        "-Djava.security.manager=allow"
]
